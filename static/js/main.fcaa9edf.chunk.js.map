{"version":3,"sources":["components/MainNav.js","assets/logo.svg","components/Banner.js","assets/yoga.svg","assets/cycling.svg","assets/swimming.svg","assets/body-building.svg","components/SideNav.js","components/SideBar.js","components/WelcomeText.js","assets/lipids.svg","assets/proteins.svg","assets/carbohydrates.svg","constants/parameters.js","assets/calories.svg","components/KeyDataCard.js","components/BarChartActivity.js","utils/formatString.js","components/RadarChartPerformance.js","components/RadialBarChartScore.js","components/LineChartSessionsLength.js","pages/Home.js","pages/ErrorPage.js","assets/loading.gif","pages/LoadingPage.js","__mocks__/data.js","api/API.js","constants/routesAPI.js","data/formattedData.js","components/App.js","reportWebVitals.js","index.js"],"names":["MainNav","className","exact","to","id","Banner","src","logo","alt","SideNav","data-value","yoga","cycling","swimming","bodybuilding","SideBar","WelcomeText","firstName","keyDatasParameters","name","title","unit","icone","color","proteins","carbohydrates","lipids","KeyDataCard","keyDataname","keyDatavalue","keyData","find","elt","style","backgroundColor","String","toFixed","replace","BarChartActivity","data","ResponsiveContainer","width","height","BarChart","sessionsActivity","margin","top","right","left","bottom","barCategoryGap","barGap","CartesianGrid","strokeDasharray","vertical","horizontalPoints","XAxis","tickFormatter","value","YAxis","yAxisId","orientation","hide","domain","axisLine","tickLine","allowDecimals","tickCount","Tooltip","formatter","contentStyle","border","itemStyle","fontSize","labelStyle","display","separator","offset","position","y","cursor","opacity","Legend","align","verticalAlign","iconType","iconSize","wrapperStyle","chartWidth","Bar","dataKey","fill","radius","toCamelCase","string","toUpperCase","slice","RadarChartPerformance","aspect","RadarChart","outerRadius","reverse","PolarGrid","PolarAngleAxis","Radar","stroke","fillOpacity","RadialBarChartScore","scoreValue","score","RadialBarChart","innerRadius","startAngle","endAngle","RadialBar","minAngle","cornerRadius","clockWise","LineChartSessionsLength","LineChart","sessionsLength","tick","transform","strokeWidth","padding","Line","type","dot","Home","userData","activityData","performanceData","sessionsData","userScore","Array","Object","entries","keyDatas","map","i","key","ErrorPage","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","d","LoadingPage","loadspinner","dataMock","MainData","userInfos","lastName","age","todayScore","calorieCount","proteinCount","carbohydrateCount","lipidCount","Activity","userId","sessions","day","kilogram","calories","Performance","kind","1","2","3","4","5","6","Sessions","sessionLength","getUserData","userID","typeOfData","dataUser","user","Promise","resolve","getUserDataFromMock","getUserDataFromAPI","userDataURL","ROUTES_API","axios","get","then","response","catch","error","console","log","status","headers","request","message","this","ActivityData","PerformanceData","dataElt","kindKey","kindLabel","filter","SessionsData","App","useState","setUserData","setActivityData","setPerformanceData","setSessionsData","isLoading","setIsLoading","isErrorOnMainData","setIsErrorOnMainData","useEffect","all","API","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fcaa9edf.chunk.js","sourcesContent":["import \"../styles/MainNav.css\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction MainNav() {\n  return (\n    <div className=\"main-nav\">\n      <nav>\n        <ul>\n          <li>\n            <NavLink exact to=\"/\" id=\"link-accueil\" className=\"main-nav-link\">\n              Accueil\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              exact\n              to=\"/profile\"\n              id=\"link-profile\"\n              className=\"main-nav-link\"\n            >\n              Profil\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              exact\n              to=\"/parameters\"\n              id=\"link-parameters\"\n              className=\"main-nav-link\"\n            >\n              Réglage\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              exact\n              to=\"/community\"\n              id=\"link-community\"\n              className=\"main-nav-link\"\n            >\n              Communauté\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  );\n}\n\nexport default MainNav;\n","export default __webpack_public_path__ + \"static/media/logo.fceb97d6.svg\";","import \"../styles/Banner.css\";\nimport MainNav from \"./MainNav\";\nimport logo from \"../assets/logo.svg\";\n\nfunction Banner() {\n  return (\n    <div className=\"main-banner\">\n      <img src={logo} alt=\"SportSee\" className=\"main-logo\" />\n      <MainNav />\n    </div>\n  );\n}\n\nexport default Banner;\n","export default __webpack_public_path__ + \"static/media/yoga.76760efc.svg\";","export default __webpack_public_path__ + \"static/media/cycling.fe885ecd.svg\";","export default __webpack_public_path__ + \"static/media/swimming.bc12b705.svg\";","export default __webpack_public_path__ + \"static/media/body-building.9d22814b.svg\";","import \"../styles/SideNav.css\";\nimport yoga from \"../assets/yoga.svg\";\nimport cycling from \"../assets/cycling.svg\";\nimport swimming from \"../assets/swimming.svg\";\nimport bodybuilding from \"../assets/body-building.svg\";\n\nfunction SideNav() {\n  return (\n    <nav className=\"sidenav\">\n      <button data-value=\"yoga\" className=\"sidenav-button\">\n        <img src={yoga} alt=\"yoga\" className=\"sidenav-icon\" />\n      </button>\n      <button data-value=\"cycling\" className=\"sidenav-button\">\n        <img src={cycling} alt=\"cycling\" className=\"sidenav-icon\" />\n      </button>\n      <button data-value=\"swimming\" className=\"sidenav-button\">\n        <img src={swimming} alt=\"swimming\" className=\"sidenav-icon\" />\n      </button>\n      <button data-value=\"bodybuilding\" className=\"sidenav-button\">\n        <img src={bodybuilding} alt=\"bodybuilding\" className=\"sidenav-icon\" />\n      </button>\n    </nav>\n  );\n}\n\nexport default SideNav;\n","import \"../styles/SideBar.css\";\nimport SideNav from \"./SideNav\";\n\nfunction SideBar() {\n  return (\n    <div className=\"sidebar\">\n      <SideNav />\n      <span>Copiryght, SportSee 2020</span>\n    </div>\n  );\n}\n\nexport default SideBar;\n","import \"../styles/WelcomeText.css\";\nimport PropTypes from \"prop-types\";\n\nexport default function WelcomeText({ firstName }) {\n  return (\n    <div className=\"welcome-text\">\n      <span className=\"welcome-text-header\">\n        {\"Bonjour \"}\n        <strong>{firstName}</strong>\n      </span>\n      <p>Félicitation ! Vous avez explosé vos objectifs hier 👏</p>\n    </div>\n  );\n}\n\nWelcomeText.propTypes = {\n  firstName: PropTypes.string,\n};","export default __webpack_public_path__ + \"static/media/lipids.18f60e0e.svg\";","export default __webpack_public_path__ + \"static/media/proteins.ffbc3b88.svg\";","export default __webpack_public_path__ + \"static/media/carbohydrates.95581ba1.svg\";","import lipids from \"../assets/lipids.svg\";\nimport proteins from \"../assets/proteins.svg\";\nimport carbohydrates from \"../assets/carbohydrates.svg\";\nimport calories from \"../assets/calories.svg\";\n\n/**\n * @const {array} keyDatasParameters - Parameters for KeyDatas like unit, icone, color...\n */\nexport const keyDatasParameters = [\n    {\n      name: \"calorieCount\",\n      title: \"Calories\",\n      unit: \"Cal\",\n      icone: calories,\n      color: \"#FF0000\",\n    },\n    {\n      name: \"proteinCount\",\n      title: \"Protéines\",\n      unit: \"g\",\n      icone: proteins,\n      color: \"#4AB8FF\",\n    },\n    {\n      name: \"carbohydrateCount\",\n      title: \"Glucides\",\n      unit: \"g\",\n      icone: carbohydrates,\n      color: \"#FDCC0C\",\n    },\n    {\n      name: \"lipidCount\",\n      title: \"Lipides\",\n      unit: \"g\",\n      icone: lipids,\n      color: \"#FD5181\",\n    },\n  ];","export default __webpack_public_path__ + \"static/media/calories.25fef86e.svg\";","import \"../styles/KeyDataCard.css\";\nimport {keyDatasParameters} from '../constants/parameters'\nimport PropTypes from 'prop-types';\n\nfunction KeyDataCard({ keyDataname, keyDatavalue }) {\n  \n  // get all parameters of keyDataname from keyDatasParameters (icone, color, title...)\n  const keyData = keyDatasParameters.find((elt) => elt.name === keyDataname);\n  \n  return (\n    <div className=\"keydata-card\">\n      <div\n        className=\"keydata-card-icone\"\n        style={{ backgroundColor: keyData.color }}\n      >\n        <img src={keyData.icone} alt={keyData.title + \" image\"} />\n      </div>\n      <div className=\"keydata-card-text\">\n        <span className=\"keydata-card-value\">\n          {String(\n            keyDatavalue > 1000\n              ? (keyDatavalue / 1000).toFixed(3) + \"k\"\n              : keyDatavalue\n          ).replace(\".\", \",\")}\n          {keyData.unit}\n        </span>\n        <span className=\"keydata-card-title\">{keyData.title}</span>\n      </div>\n    </div>\n  );\n}\n\nKeyDataCard.propTypes = {\n  keyDataname: PropTypes.string,\n  keyDatavalue: PropTypes.number\n};\n\nexport default KeyDataCard;\n","import \"../styles/BarChartActivity.css\";\nimport PropTypes from 'prop-types';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  ResponsiveContainer,\n  Tooltip,\n  Legend,\n} from \"recharts\";\n\nexport default function BarChartActivity({ data }) {\n\n  return data ? (\n    <div className=\"chart chart-large barchart-activity\">\n      <span className=\"barchart-activity-title\">Activité quotidienne</span>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          data={data.sessionsActivity}\n          margin={{\n            top: 30,\n            right: 30,\n            left: 20,\n            bottom: 10,\n          }}\n          barCategoryGap={\"25%\"}\n          barGap={\"10%\"}\n          color=\"#9B9EAC\"\n        >\n          <CartesianGrid\n            strokeDasharray=\"3 3\"\n            vertical={false}\n            horizontalPoints={[80, 170]}\n          />\n          <XAxis tickFormatter={(value) => value + 1} />\n          <YAxis yAxisId=\"left\" orientation=\"left\" hide={true} />\n          <YAxis\n            yAxisId=\"right\"\n            orientation=\"right\"\n            domain={[\"dataMin - 1\", \"(dataMax + dataMin)/2\", \"dataMax + 1\"]}\n            unit=\"kg\"\n            axisLine={false}\n            tickLine={false}\n            allowDecimals={true}\n            tickCount={3}\n          />\n          <Tooltip\n            formatter={(value, name) => [\n              name === \"kilogram\" ? value + \"kg\" : value + \"kCal\",\n              \"\",\n            ]}\n            contentStyle={{ backgroundColor: \"#E60000\", border: \"none\" }}\n            itemStyle={{ color: \"white\", fontSize: \"8px\", margin: \"4px 0\" }}\n            labelStyle={{ display: \"none\" }}\n            separator=\"\"\n            offset={50}\n            position={{ y: 50 }}\n            cursor={{ backgroundColor: \"#C4C4C4\", opacity: 0.5 }}\n          />\n          <Legend\n            align=\"right\"\n            verticalAlign=\"top\"\n            iconType=\"circle\"\n            iconSize=\"8\"\n            wrapperStyle={{ top: \"25px\" }}\n            height={50}\n            chartWidth={300}\n            formatter={(value) => [\n              value === \"kilogram\" ? \"Poids (Kg)\" : \"Calories brûlées\",\n            ]}\n          />\n          <Bar\n            dataKey=\"kilogram\"\n            yAxisId=\"right\"\n            fill=\"#282D30\"\n            radius={[10, 10, 0, 0]}\n          />\n          <Bar\n            dataKey=\"calories\"\n            yAxisId=\"left\"\n            fill=\"#E60000\"\n            radius={[10, 10, 0, 0]}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  ) : (\n    <div className=\"chart chart-large barchart-activity\">\n      <span className=\"chart-error-text\">\n        Impossible de récupérer l'historique de votre activité quotidienne\n      </span>\n    </div>\n  );\n}\n\nBarChartActivity.propTypes = {\n  data: PropTypes.shape({\n    sessionsActivity: PropTypes.arrayOf(\n      PropTypes.shape({\n        day: PropTypes.string,\n        kilogram: PropTypes.number,\n        calories: PropTypes.number,\n      })\n    ),\n  }),\n};","const toCamelCase = (string) => string[0].toUpperCase() + string.slice(1);\n\nexport default toCamelCase;\n","import \"../styles/RadarChartPerformance.css\";\nimport toCamelCase from \"../utils/formatString\";\nimport PropTypes from 'prop-types';\nimport {\n  Radar,\n  RadarChart,\n  PolarGrid,\n  PolarAngleAxis,\n  ResponsiveContainer,\n} from \"recharts\";\n\nexport default function RadarChartPerformance({ data }) {\n  return data ? (\n    <div className=\"chart chart-small radarchart-performance\">\n      <ResponsiveContainer width=\"100%\" height=\"100%\" aspect={1}>\n        <RadarChart outerRadius=\"65%\" data={data.data.reverse()}>\n          <PolarGrid />\n          <PolarAngleAxis\n            dataKey=\"kindLabel\"\n            tickFormatter={(value) => {\n              switch (String(value)) {\n                case \"intensity\":\n                  return \"Intensité\";\n                case \"speed\":\n                  return \"Vitesse\";\n                case \"energy\":\n                  return \"Energie\";\n                case \"strength\":\n                  return \"Force\";\n                default:\n                  return toCamelCase(String(value));\n              }\n            }}\n          />\n          <Radar\n            dataKey=\"value\"\n            stroke=\"#E60000\"\n            fill=\"#E60000\"\n            fillOpacity={0.8}\n          />\n        </RadarChart>\n      </ResponsiveContainer>\n    </div>\n  ) : (\n    <div className=\"chart chart-small radarchart-performance\">\n      <span className=\"chart-error-text\">\n        L'état de vos performances n'a pas pu être récupéré\n      </span>\n    </div>\n  );\n}\n\nRadarChartPerformance.propTypes = {\n  data: PropTypes.shape({\n    data: PropTypes.arrayOf(\n      PropTypes.shape({\n        kindLabel: PropTypes.string,\n        value: PropTypes.number,\n      })\n    ),\n  }),\n};","import \"../styles/RadialBarChartScore.css\";\nimport PropTypes from \"prop-types\";\nimport { RadialBarChart, RadialBar, ResponsiveContainer } from \"recharts\";\n\nexport default function RadialBarChartScore({ data }) {\n  const scoreValue = data[0].score;\n\n  return scoreValue ? (\n    <div className=\"chart chart-small radialbarchart-score\">\n      <span className=\"radialbarchart-score-label\">\n        <strong>{String(scoreValue * 100) + \"%\"}</strong>\n        <br /> de votre Objectif\n      </span>\n      <ResponsiveContainer width=\"100%\" height=\"100%\" aspect={1}>\n        <RadialBarChart\n          height={250}\n          innerRadius=\"80%\"\n          outerRadius=\"65%\"\n          data={data}\n          startAngle={90}\n          endAngle={90 - 360 * scoreValue}\n          fill={\"white\"}\n        >\n          <RadialBar\n            minAngle={15}\n            cornerRadius={10}\n            clockWise={true}\n            dataKey=\"score\"\n          />\n        </RadialBarChart>\n      </ResponsiveContainer>\n    </div>\n  ) : (\n    <div className=\"chart chart-small radialbarchart-score\">\n      <span className=\"chart-error-text\">\n        Votre score n'a pas pu être récupéré\n      </span>\n    </div>\n  );\n}\n\nRadialBarChartScore.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({ score: PropTypes.number })),\n};\n","import { Line, LineChart, ResponsiveContainer, XAxis, Tooltip } from \"recharts\";\nimport \"../styles/LineChartSessionsLength.css\";\nimport PropTypes from 'prop-types';\n\nexport default function LineChartSessionsLength({ data }) {\n  return data ? (\n    <div className=\"chart chart-small linechart-sessions-length\">\n      <span className=\"linechart-sessions-label\">\n        Durée moyenne des sessions\n      </span>\n      <ResponsiveContainer width=\"100%\" height=\"100%\" aspect={1}>\n        <LineChart\n          width={730}\n          height={250}\n          data={data.sessionsLength}\n          margin={{ top: 50, right: 15, left: 15, bottom: 20 }}\n        >\n          <XAxis\n            dataKey=\"day\"\n            axisLine={false}\n            tick={{ fill: \"#FFFFFF\", transform: \"translate(0, 10)\" }}\n            tickLine={false}\n            tickFormatter={(value) => {\n              switch (value) {\n                case 1:\n                  return \"L\";\n                case 2:\n                  return \"M\";\n                case 3:\n                  return \"M\";\n                case 4:\n                  return \"J\";\n                case 5:\n                  return \"V\";\n                case 6:\n                  return \"S\";\n                case 7:\n                  return \"D\";\n                default:\n                  return \"NA\";\n              }\n            }}\n          />\n          <Tooltip\n            cursor={{\n              transform: \"translate(400, -150) scale(1, 3)\",\n              opacity: 0.1,\n              stroke: \"black\",\n              strokeWidth: \"800px\",\n            }}\n            itemStyle={{\n              color: \"black\",\n              fontSize: \"8px\",\n              margin: \"auto\",\n              padding: \"O\",\n            }}\n            separator=\"\"\n            labelStyle={{ display: \"none\" }}\n            formatter={(value, name) => [String(value) + \"min\", \"\"]}\n            contentStyle={{ verticalAlign: \"middle\", padding: \"3px 6px\" }}\n          />\n          <Line\n            type=\"monotone\"\n            dataKey=\"sessionLength\"\n            stroke=\"white\"\n            dot={false}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  ) : (\n    <div className=\"chart chart-small linechart-sessions-length\">\n      <span className=\"chart-error-text\">\n        Impossible d'afficher l'historique de vos dernières sessions\n      </span>\n    </div>\n  );\n}\n\nLineChartSessionsLength.propTypes = {\n  data: PropTypes.shape({\n    sessionsLength: PropTypes.arrayOf(\n      PropTypes.shape({\n        day: PropTypes.number,\n        sessionLength: PropTypes.number,\n      })\n    ),\n  }),\n};","import \"../styles/Home.css\";\nimport WelcomeText from \"../components/WelcomeText\";\nimport KeyDataCard from \"../components/KeyDataCard\";\nimport BarChartActivity from \"../components/BarChartActivity\";\nimport RadarChartPerformance from \"../components/RadarChartPerformance\";\nimport RadialBarChartScore from \"../components/RadialBarChartScore\";\nimport LineChartSessionsLength from \"../components/LineChartSessionsLength\";\nimport PropTypes from \"prop-types\";\n\nfunction Home({ userData, activityData, performanceData, sessionsData }) {\n  const userScore = Array({ score: userData.score });\n  return (\n    <main>\n      <div className=\"home-content\">\n        <WelcomeText firstName={userData.firstName} />\n        <div className=\"home-charts\">\n          <BarChartActivity data={activityData} />\n          <LineChartSessionsLength data={sessionsData} />\n          <RadarChartPerformance data={performanceData} />\n          <RadialBarChartScore data={userScore} />\n        </div>\n        <div className=\"home-keydatas\">\n          {Object.entries(userData.keyDatas).map(([key, value], i) => (\n            <KeyDataCard keyDataname={key} keyDatavalue={value} key={i} />\n          ))}\n        </div>\n      </div>\n    </main>\n  );\n}\n\nHome.propTypes = {\n  userData: PropTypes.shape({\n    firstName:  PropTypes.string,\n    lastName:  PropTypes.string,\n    age:  PropTypes.number,\n    score: PropTypes.number,\n    keyDatas: PropTypes.shape({\n      keyData: PropTypes.number\n    })\n  }),\n  activityData: PropTypes.shape({\n    sessionsActivity : PropTypes.arrayOf(\n      PropTypes.shape({\n        day: PropTypes.string,\n        kilogram: PropTypes.number,\n        calories: PropTypes.number,\n      })\n    )\n  }), \n  performanceData: PropTypes.shape({\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          kindKey: PropTypes.number,\n          kindLabel: PropTypes.string,\n          value: PropTypes.number,\n        })\n      )\n  }), \n  sessionsData : PropTypes.shape({\n    sessionsLength: PropTypes.arrayOf(\n      PropTypes.shape({\n        day: PropTypes.number,\n        sessionLength: PropTypes.number,\n      })\n    )\n  })\n};\n\nexport default Home;\n","import \"../styles/ErrorPage.css\";\n\nfunction ErrorPage() {\n  return (\n    <main>\n      <div className=\"errorpage-content\">\n        <svg\n          className=\"errorpage-image\"\n          aria-hidden=\"true\"\n          focusable=\"false\"\n          data-prefix=\"fas\"\n          data-icon=\"user-injured\"\n          role=\"img\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 448 512\"\n        >\n          <path\n            fill=\"currentColor\"\n            d=\"M277.37 11.98C261.08 4.47 243.11 0 224 0c-53.69 0-99.5 33.13-118.51 80h81.19l90.69-68.02zM342.51 80c-7.9-19.47-20.67-36.2-36.49-49.52L239.99 80h102.52zM224 256c70.69 0 128-57.31 128-128 0-5.48-.95-10.7-1.61-16H97.61c-.67 5.3-1.61 10.52-1.61 16 0 70.69 57.31 128 128 128zM80 299.7V512h128.26l-98.45-221.52A132.835 132.835 0 0 0 80 299.7zM0 464c0 26.51 21.49 48 48 48V320.24C18.88 344.89 0 381.26 0 422.4V464zm256-48h-55.38l42.67 96H256c26.47 0 48-21.53 48-48s-21.53-48-48-48zm57.6-128h-16.71c-22.24 10.18-46.88 16-72.89 16s-50.65-5.82-72.89-16h-7.37l42.67 96H256c44.11 0 80 35.89 80 80 0 18.08-6.26 34.59-16.41 48H400c26.51 0 48-21.49 48-48v-41.6c0-74.23-60.17-134.4-134.4-134.4z\"\n          ></path>\n        </svg>\n        <span>\n          <strong>Oups...</strong>\n          <br />\n          La page que vous demandez est introuvable ou indisponible\n          actuellement.\n          <br />\n        </span>\n      </div>\n    </main>\n  );\n}\n\nexport default ErrorPage;\n","export default __webpack_public_path__ + \"static/media/loading.3237429d.gif\";","import \"../styles/LoadingPage.css\";\nimport loadspinner from \"../assets/loading.gif\";\n\nfunction LoadingPage() {\n  return (\n    <div className=\"loading-page\">\n      <img src={loadspinner} alt=\"loading...\"></img>\n    </div>\n  );\n}\n\nexport default LoadingPage;\n","\n/**\n * @const {Object} dataMock - represented the mock data\n */\nconst dataMock = {\n  MainData: [\n    {\n      id: 12,\n      userInfos: { firstName: \"Karl\", lastName: \"Dovineau\", age: 31 },\n      todayScore: 0.12,\n      keyData: {\n        calorieCount: 1930,\n        proteinCount: 155,\n        carbohydrateCount: 290,\n        lipidCount: 50,\n      },\n    },\n    {\n      id: 18,\n      userInfos: { firstName: \"Cecilia\", lastName: \"Ratorez\", age: 34 },\n      score: 0.3,\n      keyData: {\n        calorieCount: 2500,\n        proteinCount: 90,\n        carbohydrateCount: 150,\n        lipidCount: 120,\n      },\n    },\n  ],\n  Activity: [\n    {\n      userId: 12,\n      sessions: [\n        { day: \"2020-07-01\", kilogram: 80, calories: 240 },\n        { day: \"2020-07-02\", kilogram: 80, calories: 220 },\n        { day: \"2020-07-03\", kilogram: 81, calories: 280 },\n        { day: \"2020-07-04\", kilogram: 81, calories: 290 },\n        { day: \"2020-07-05\", kilogram: 80, calories: 160 },\n        { day: \"2020-07-06\", kilogram: 78, calories: 162 },\n        { day: \"2020-07-07\", kilogram: 76, calories: 390 },\n      ],\n    },\n    // {\n    //   userId: 18,\n    //   sessions: [\n    //     { day: \"2020-07-01\", kilogram: 70, calories: 240 },\n    //     { day: \"2020-07-02\", kilogram: 69, calories: 220 },\n    //     { day: \"2020-07-03\", kilogram: 70, calories: 280 },\n    //     { day: \"2020-07-04\", kilogram: 70, calories: 500 },\n    //     { day: \"2020-07-05\", kilogram: 69, calories: 160 },\n    //     { day: \"2020-07-06\", kilogram: 69, calories: 162 },\n    //     { day: \"2020-07-07\", kilogram: 69, calories: 390 },\n    //   ],\n    // },\n  ],\n  Performance: [\n    {\n      userId: 12,\n      kind: {\n        1: \"cardio\",\n        2: \"energy\",\n        3: \"endurance\",\n        4: \"strength\",\n        5: \"speed\",\n        6: \"intensity\",\n      },\n      data: [\n        { value: 80, kind: 1 },\n        { value: 120, kind: 2 },\n        { value: 140, kind: 3 },\n        { value: 50, kind: 4 },\n        { value: 200, kind: 5 },\n        { value: 90, kind: 6 },\n      ],\n    },\n    // {\n    //   userId: 18,\n    //   kind: {\n    //     1: \"cardio\",\n    //     2: \"energy\",\n    //     3: \"endurance\",\n    //     4: \"strength\",\n    //     5: \"speed\",\n    //     6: \"intensity\",\n    //   },\n    //   data: [\n    //     { value: 200, kind: 1 },\n    //     { value: 240, kind: 2 },\n    //     { value: 80, kind: 3 },\n    //     { value: 80, kind: 4 },\n    //     { value: 220, kind: 5 },\n    //     { value: 110, kind: 6 },\n    //   ],\n    // },\n  ],\n  Sessions: [\n    {\n      userId: 12,\n      sessions: [\n        { day: 1, sessionLength: 30 },\n        { day: 2, sessionLength: 23 },\n        { day: 3, sessionLength: 45 },\n        { day: 4, sessionLength: 50 },\n        { day: 5, sessionLength: 0 },\n        { day: 6, sessionLength: 0 },\n        { day: 7, sessionLength: 60 },\n      ],\n    },\n    // {\n    //   userId: 18,\n    //   sessions: [\n    //     { day: 1, sessionLength: 30 },\n    //     { day: 2, sessionLength: 40 },\n    //     { day: 3, sessionLength: 50 },\n    //     { day: 4, sessionLength: 30 },\n    //     { day: 5, sessionLength: 30 },\n    //     { day: 6, sessionLength: 50 },\n    //     { day: 7, sessionLength: 50 },\n    //   ],\n    // },\n  ],\n};\n\n/**\n * @param {number} userID - An integer represented the id of current user\n * @param {string} typeOfData - A string represented the type of data to get\n * @return {Promise} Promise object represents the data to get for the user \n */\nfunction getUserDataFromMock(userID, typeOfData) {\n  const dataUser = dataMock[typeOfData].find((user) =>\n    typeOfData === \"MainData\" ? user.id === userID : user.userId === userID\n  );\n  return new Promise((resolve) => resolve(dataUser));\n}\n\nexport { getUserDataFromMock };\n","import axios from \"axios\";\nimport { URL_API, ROUTES_API } from \"../constants/routesAPI\";\nimport { getUserDataFromMock } from \"../__mocks__/data\";\n\n/**\n * @const {boolean} activeMock - boolean to pass to mock mode if true or API mode if false\n */\nconst activeMock = true;\n\n/** Class representing API methods */\nclass API {\n  /** method for get the data with getUserDataFromAPI or getUserDataFromMock\n   * @param {number} userID - An integer representing the id of current user\n   * @param {string} typeOfData - A string representing the type of data to get\n   * @return {Promise} Promise object represents the data to get for the user\n   */\n  getUserData = (userID, typeOfData) => {\n    return !activeMock\n      ? this.getUserDataFromAPI(userID, typeOfData)\n      : getUserDataFromMock(userID, typeOfData);\n  };\n\n  /** method for get the data with the API of the backend\n   * @param {number} userID - An integer representing the id of current user\n   * @param {string} typeOfData - A string representing the type of data to get\n   * @const {string} userDataURL - A string containing full URL for API call \n   * @return {Promise} Promise object represents the data to get for the user\n   */\n  getUserDataFromAPI = (userID, typeOfData) => {\n    const userDataURL = URL_API + ROUTES_API(userID)[typeOfData];\n    return axios\n      .get(userDataURL)\n      .then((response) => response.data.data)\n      .catch((error) => {\n        if (error.response) {\n          /*\n           * The request was made and the server responded with a\n           * status code that falls out of the range of 2xx\n           */\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          /*\n           * The request was made but no response was received, `error.request`\n           * is an instance of XMLHttpRequest in the browser and an instance\n           * of http.ClientRequest in Node.js\n           */\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request and triggered an Error\n          console.log(\"Error\", error.message);\n        }\n      });\n  };\n}\n\nexport default new API();\n","\n/**\n * @const {string} URL_API - URL of API of the backend (default \"http://localhost:3000\") \n */\nexport const URL_API = \"http://localhost:3000\";\n\n/**\n * \n * @param {number} userID - an integer representing the ID of user \n * @return {Object} object with TypeOfData for keys and EndPoints API for values\n */\nexport const ROUTES_API = (userID) => {\n  return {\n    MainData: \"/user/\" + userID,\n    Performance: \"/user/\" + userID + \"/performance\",\n    Activity: \"/user/\" + userID + \"/activity\",\n    Sessions: \"/user/\" + userID + \"/average-sessions\",\n  };\n};\n","\n/** Class to Format data get for MainData */\nexport class MainData {\n  constructor(data) {\n    this.firstName = data.userInfos.firstName;\n    this.lastName = data.userInfos.lastName;\n    this.age = data.userInfos.age;\n    this.score = data.score || data.todayScore;\n    this.keyDatas = data.keyData;\n  }\n}\n\n/** Class to Format data get for ActivityData */\nexport class ActivityData {\n  constructor(data) {\n    this.sessionsActivity = data.sessions;\n  }\n}\n\n/** Class to Format data get for PerformanceData */\nexport class PerformanceData {\n  constructor(data) {\n    this.data = data.data.map((dataElt) => ({\n      kindKey: dataElt.kind,\n      kindLabel: Object.entries(data.kind)\n        .filter(([key]) => key === String(dataElt.kind))\n        .map(([key, value]) => value)[0],\n      value: dataElt.value,\n    }));\n  }\n}\n\n/** Class to Format data get for SessionsData */\nexport class SessionsData {\n  constructor(data) {\n    this.sessionsLength = data.sessions;\n  }\n}\n","import { HashRouter as Router } from \"react-router-dom\";\nimport Banner from \"./Banner\";\nimport SideBar from \"./SideBar\";\nimport Home from \"../pages/Home\";\nimport ErrorPage from \"../pages/ErrorPage\";\nimport LoadingPage from \"../pages/LoadingPage\";\nimport \"../styles/App.css\";\nimport API from \"../api/API\";\nimport React, { useState, useEffect } from \"react\";\nimport {\n  MainData,\n  ActivityData,\n  PerformanceData,\n  SessionsData,\n} from \"../data/formattedData\";\nimport axios from \"axios\";\n\n// The constant userID should be replaced later by a getUserID when the LoginPage will be developed\nconst USER_ID = 12;\nlet userID = USER_ID;\n\nfunction App() {\n  // States for data getted from the API\n  const [userData, setUserData] = useState(null);\n  const [activityData, setActivityData] = useState(null);\n  const [performanceData, setPerformanceData] = useState(null);\n  const [sessionsData, setSessionsData] = useState(null);\n\n  // States for check Loading Status and if there is an Error on MainData\n  const [isLoading, setIsLoading] = useState(true);\n  const [isErrorOnMainData, setIsErrorOnMainData] = useState(false);\n\n  // API calls will be runned only during the first render of App component\n  // The data states will changed on a success call\n  // If an error occurs on API.getUserData call for MainData, setIsErrorOnMainData is set to true\n  // After axios.all statement, setIsErrorOnMainData is set to false\n\n  useEffect(() => {\n    axios\n      .all([\n        API.getUserData(userID, \"MainData\")\n          .then((data) => setUserData(new MainData(data)))\n          .catch(() => {\n            setIsErrorOnMainData(true);\n          }),\n        API.getUserData(userID, \"Activity\")\n          .then((data) => setActivityData(new ActivityData(data)))\n          .catch((error) => console.log(error)),\n        API.getUserData(userID, \"Sessions\")\n          .then((data) => setSessionsData(new SessionsData(data)))\n          .catch((error) => console.log(error)),\n        API.getUserData(userID, \"Performance\")\n          .then((data) => setPerformanceData(new PerformanceData(data)))\n          .catch((error) => console.log(error)),\n      ])\n      .then(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <Router>\n      <Banner />\n      <SideBar />\n      {isLoading ? (\n        <LoadingPage />\n      ) : isErrorOnMainData ? (\n        <ErrorPage />\n      ) : (\n        <Home\n          userData={userData}\n          activityData={activityData}\n          performanceData={performanceData}\n          sessionsData={sessionsData}\n        />\n      )}\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}